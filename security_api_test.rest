###################################################
############ Register a new user ##################
###################################################
POST http://127.0.0.1:8000/register/
Content-Type: application/json

{
  "username": "TestUser",
  "password": "TestPassword",
  "email": "testEmail@domain.com"
}


###################################################
################ Obtain a token ###################
###################################################
POST http://127.0.0.1:8000/api-token-auth/
Content-Type: application/json

{
  "username": "TestUser",
  "password": "TestPassword"
}


###################################################
###### Test Access for Unauthenticated Users ######
###################################################

### Ensure unauthenticated users cannot list security records
GET http://127.0.0.1:8000/api/security-records/

### Ensure unauthenticated users cannot retrieve a security record by ID
GET http://127.0.0.1:8000/api/security-records/5/

### Ensure unauthenticated users cannot create a new security record
POST http://127.0.0.1:8000/api/security-records/
Content-Type: application/json

{
  "name": "New Security Record",
  "description": " Description of the new security record."
}

### Ensure unauthenticated users cannot update a security record
PUT http://127.0.0.1:8000/api/security-records/1/
Content-Type: application/json

{
  "name": "Updated Security Record",
  "description": "Updated description of the security record."
}

### Ensure unauthenticated users cannot delete a security record
DELETE http://127.0.0.1:8000/api/security-records/1/



#################################################
###### Test Access for Authenticated Users ######
#################################################

### Ensure authenticated users can list security records
GET http://127.0.0.1:8000/api/security-records/
Authorization: Token <token>

### Ensure authenticated users can retrieve a security record by ID
PUT http://127.0.0.1:8000/api/security-records/1/
Authorization: Token <token>

# Ensure authenticated users can create a new security record
POST http://127.0.0.1:8000/api/security-records/
Content-Type: application/json
Authorization: Token <token>

{
  "name": "New Security Record",
  "description": " Description of the new security record."
}

### Ensure authenticated users can update a security record
PUT http://127.0.0.1:8000/api/security-records/1/
Content-Type: application/json
Authorization: Token <token>

{
  "name": "Updated Security Record",
  "description": "Updated description of the security record."
}

### Ensure authenticated users can delete a security record
DELETE http://127.0.0.1:8000/api/security-records/1/
Authorization: Token <token>